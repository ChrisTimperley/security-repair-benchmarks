#!/bin/bash
set -eu

HERE_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SOURCE_DIR="${HERE_DIR}/source"

CONFIG_PATH="./configure"
CONFIG_OPTIONS="--disable-nls"
# CONFIG_OPTIONS="--disable-shared --disable-gdb --disable-libdecnumber --disable-readline --disable-sim LIBS='-ldl -lutil'"

pushd "${SOURCE_DIR}"

export CFLAGS="-DFORTIFY_SOURCE=2 -ggdb -Wno-error ${CFLAGS:-}"
export CXXFLAGS="$CFLAGS  ${CXXFLAGS:-}"

if [ -z "$C_INCLUDE_PATH" ]; then
  export C_INCLUDE_PATH=/include/path
else
  export C_INCLUDE_PATH="/include/path:${C_INCLUDE_PATH}"
fi

if [[ "${REPAIR_TOOL}" == "extractfix" ]]; then
  COMPILE_TYPE="$1"
  CONFIG_PATH="../configure"

  rm -rf klee
  mkdir klee
  pushd klee

  # TODO this seems to always be the same?
  export CFLAGS="-g -D__NO_STRING_INLINES  -D_FORTIFY_SOURCE=0 -U__OPTIMIZE__ -lkleeRuntest -lkleeBasic -Wno-everything ${CFLAGS:-}"

  # TODO these seem to always be the same? [sometimes contains project-specific lib] could be autogenerated?
  if [[ "${COMPILE_TYPE}" == "to_bc" ]]; then
    export LLVM_COMPILER=clang
    export CC=wllvm
  # FIXME these sanitizer flags may differ between individual bugs
  elif [[ "${COMPILE_TYPE}" == "lowfat" ]]; then
    export CC="${LOWFAT_CLANG}"
    export CFLAGS="${CFLAGS} -fsanitize=integer-divide-by-zero -fsanitize=lowfat -mllvm -lowfat-debug -mllvm -lowfat-no-check-reads -mllvm -lowfat-no-check-writes -mllvm -lowfat-no-check-memset -mllvm -lowfat-no-check-memcpy -mllvm -lowfat-no-check-escapes -mllvm -lowfat-no-check-fields -mllvm -lowfat-check-whole-access -mllvm -lowfat-no-replace-globals -mllvm -lowfat-no-replace-alloca -mllvm -lowfat-no-replace-malloc -mllvm -lowfat-symbolize -lstlimpl"
  fi
fi

"${CONFIG_PATH}" ${CONFIG_OPTIONS}
