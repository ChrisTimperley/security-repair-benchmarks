#!/bin/bash
set -eu

HERE_DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
SOURCE_DIR="${HERE_DIR}/source"
BUILD_DIR="${SOURCE_DIR}/build"
BUG_FILE="${HERE_DIR}/bug.json"

SUBJECT="$(jq -r ".options.extractfix.binary.name" "${BUG_FILE}")"
SUBJECT_PATH="$(jq -r ".options.extractfix.binary.path" "${BUG_FILE}")"

# this can go into the generated script
if [[ "${REPAIR_TOOL}" == "extractfix" ]]; then
  export LLVM_COMPILER=clang
  BUILD_DIR="${SOURCE_DIR}/klee"
fi

pushd "${BUILD_DIR}"

make

# this can go into the generated script
if [[ "${REPAIR_TOOL}" == "extractfix" ]]; then
  COMPILE_TYPE="$1"

  # copy target to root dir
  cp "${SUBJECT_PATH}" "${SOURCE_DIR}"

  # copy target bitcode to root dir
  if [[ "${COMPILE_TYPE}" == "to_bc" ]]; then
    KLEE_CFLAGS="-lkleeRuntest -lkleeBasic -lhook -L${HERE_DIR}/project_specific_lib/"
    PROJECT_CFLAGS="-llzma -lz -lm -ljbig"
    wllvm -ggdb3 -Wall -W -o ${SUBJECT} ${SUBJECT}.o ${PROJECT_CFLAGS} ${KLEE_CFLAGS} -Wl,-rpath
    extract-bc -l llvm-link "${SUBJECT}"
    cp "${SUBJECT}.bc" "${SOURCE_DIR}"
  fi
fi
